
<html>

<head>
  <link rel="Website Icon" type="png" href="/logo_npd.png">
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <title>Create</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

  <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>


  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-aFq/bzH65dt+w6FI2ooMVUpc+21e0SRygnTpmBvdBgSdnuTN7QbdgL+OapgHtvPp" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-qKXV1j0HvMUeCBQ+QVp7JcfGl760yU08IQ+GpUo5hlbpg51QRiuqHAJz8+BrxE/N"
    crossorigin="anonymous"></script>
  </script>
    <!-- For password meter   -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/zxcvbn/4.4.2/zxcvbn.js"></script>

  <style>
    .input-group {
      position: relative;
    }
  
    .input-group-text {
      cursor: pointer;
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
    }

    .password-strength {
    margin-top: 10px;
    font-weight: bold;
  }

  .very-weak {
    color: red;
  }

  .weak {
    color: orange;
  }

  .moderate {
    color: #FEDD00  ;
  }

  .strong {
    color: green;
  }

  .very-strong {
    color: darkgreen;
  }

  a.back-button {
      display: inline-flex;
      align-items: center;
      padding: 10px 15px;
      text-decoration: none;
      background-color: #3498db;
      color: #fff;
      border-radius: 5px;
      transition: background-color 0.3s;
      margin: 50px;
      font-size: 18px;
    }

    a.back-button:hover {
      background-color: #2980b9;
    }

    .back-button i {
      margin-left: 5px;
      font-size: 30px;
    }
  </style>
   
</head>
<body >
  <a href="/admin/table" class="back-button">Go Back<i class='bx bxs-left-arrow-square'></i></a>
  <div class="container">
    
    <form method="POST" action="/admin/create" onsubmit="return validateUserType()">

      <h2 class="text-center mb-4 mt-5" >Manager Registration</h2>
      <div class="row jumbotron shadow-lg p-3 mb-5 bg-body-tertiary rounded border">

        <center>
          <% if (typeof ErrorMessage !== 'undefined') { %>
            <p style="color: red;">
              <%= req.query.ErrorMessage %>
            </p>
          <% } else if (typeof SuccessMessage !== 'undefined') { %>
            <p style="color: green;">
              <%= req.query.SuccessMessage %>
            </p>
          <% } %>
        </center>


            <div class="col-sm-4 form-group">
              <label for="inputEmail4">Email</label>
              <input type="mail" class="form-control" placeholder="Enter the Email." id="email"
                name="email" autocomplete="email" pattern="^[^<>()]+$" required >
            </div>

              <div class="col-sm-4 form-group">
                <label for="inputEmail4">Last Name</label>
                <input type="text" class="form-control" placeholder="Enter your last name." id="lastName"
                  name="lastName" autocomplete="LastName" required min="4" 
                  pattern="^[A-Z][a-zA-Z\s-]*[^<>()0-9]*$">
              </div>

              <div class="col-sm-4 form-group">
                <label for="inputPassword4">First Name</label>
                <input type="text" class="form-control" placeholder="Enter your first name." id="firstName"
                  name="firstName" autocomplete="firstName" required min="4" pattern="^[A-Z][a-zA-Z\s-]*[^<>()0-9]*$">
              </div>

              <div class="col-sm-4 form-group">
                <label for="inputPassword4">Middle Name</label>
                <input type="text" class="form-control" placeholder="Enter your middle name." id="middleName"
                  name="middleName" autocomplete="middleName" required min="4" pattern="^[A-Z][a-zA-Z\s-]*[^<>()0-9]*$">
              </div>

              <div class="col-sm-4 form-group">
                <label for="inputPassword4">QLFR</label>
                <input type="text" class="form-control" placeholder="Enter QLFR" id="QLFR" name="QLFR" autocomplete="QLFR" pattern="^[A-Z][a-zA-Z\s-]*[^<>()0-9]*$">
              </div>


              <div class="col-sm-4 form-group">
                <label for="inputEmail4">Police ID Number</label>
                <input type="text" class="form-control" placeholder="Enter Police ID Number" name="policeId"
                  autocomplete="serialN" required min="4" pattern="^[A-Z][A-Za-z1-9@#$%!&*\s]*[^<>()]*$">
              </div>

        
              <div class="col-sm-4 form-group">
                <label for="inputEmail4">Office</label>
                <input type="text" class="form-control" placeholder="Office" name="office" autocomplete="office"
                  required min="4" pattern="^[A-Z][a-zA-Z]*[^<>()]*$">
              </div>

              
              <div class="col-sm-4 form-group">
                <label for="inputZip">Rank</label>
                <input type="text" class="form-control" id="rank" name="rank" placeholder="Rank"  pattern="^[A-Z][a-zA-Z\s-]*[^<>()0-9]*$">
              </div>

              <div class="col-sm-4 form-group">
                <label for="inputZip">Password <span id="password-strength"></span></label>
                <div class="input-group">
                  <input type="password" class="form-control" id="password" name="password" pattern="^[A-Z][A-Za-z1-9@#$%!&*\s]*[^<>()]*$">
                  <div class="input-group-append">
                    <span class="input-group-text">
                      <i class="fas fa-eye" id="togglePassword" onclick="togglePasswordVisibility()"></i>
                    </span>
                  </div>
                </div>
              </div>

              <div class="col-sm-4 form-group">
                <label for="inputZip">User Type</label>
                  <select id="usertype" name="usertype" class="form-control" required>
                    <option value="Choose from this list">.....</option>
                    <option value="Admin">Admin</option>
                    <option value="Manager">Manager</option>
                  </select>
              </div>

                 <!-- for spacing -->
                 <div class="col-sm-4 form-group">
                </div>


              <div class="col-sm-4 form-group">
                <label>Password Requirements</label>
                <label>
                    <span class="fas fa-eye"></span> Password must be at least 4 characters long and contain both uppercase and lowercase letters.
                </label>
              </div>

              <!-- for spacing -->
              <div class="col-sm-4 form-group">
              </div>
              

              <div class="col-sm-4 form-group">
              </div>
      </div>


      <div class="col-sm-12 form-group mb-0 text-center">
        <button type="submit" id="submitBtn" class="btn btn-primary ">Submit</button>
        <button type="reset" class="btn btn-danger ">Reset</button>

      </div>
      

    </form>

  </div>


  <script>
    
  // Function to show password when the eye icon is clicked
    function togglePasswordVisibility() {
      var passwordInput = document.getElementById("password");
      var togglePasswordIcon = document.getElementById("togglePassword");
      if (passwordInput.type === "password") {
        passwordInput.type = "text";
        togglePasswordIcon.classList.remove("fa-eye");
        togglePasswordIcon.classList.add("fa-eye-slash");
      } else {
        passwordInput.type = "password";
        togglePasswordIcon.classList.remove("fa-eye-slash");
        togglePasswordIcon.classList.add("fa-eye");
      }
    }
  // Function to show password strength meter 
  function updatePasswordStrengthMeter() {
    const passwordInput = document.getElementById("password");
    const passwordStrength = document.getElementById("password-strength");

    if (passwordInput.value.trim() === '') {
      passwordStrength.innerHTML = '';
      passwordStrength.className = 'password-strength';
      return;
    }

    const result = zxcvbn(passwordInput.value);
    const score = result.score; 

    // Define strength levels and corresponding CSS classes
    const strengthLevels = ['Very Weak', 'Weak', 'Moderate', 'Strong', 'Very Strong'];
    const strengthClasses = ['very-weak', 'weak', 'moderate', 'strong', 'very-strong'];

    // Update UI
    passwordStrength.innerHTML = ` Strength: ${strengthLevels[score]}`;
    passwordStrength.className = `-strength ${strengthClasses[score]}`;
  }

    // Attach event listener to password input for real-time updates
    const passwordInput = document.getElementById("password");
    passwordInput.addEventListener("input", updatePasswordStrengthMeter);

  // To pick the user type
  function validateUserType() {
      var selectedValue = document.getElementById("usertype").value;

      if (selectedValue === "Choose from this list") {
        alert("Please select a valid user type.");
        return false; // Prevent form submission
      } else {
        return true; // Allow form submission
      }
    }
</script>
    
<script>
  const validInput = (input) => {
    // Regular expression to allow any characters except <>()*
    const pattern = /^[^<>()*]+$/;
    return pattern.test(input);
  }

  document.addEventListener('DOMContentLoaded', function () {
    const form = document.querySelector('form');

    form.addEventListener('submit', function (event) {
      // Iterate through each form element
      form.querySelectorAll('input').forEach(function (input) {
        // Apply validation for restricted characters
        if (!validInput(input.value)) {
          event.preventDefault(); // Prevent form submission if validation fails
          alert(`Invalid input for ${input.id}. Please avoid using <>()* characters.`);
        }
      });
    });
  });
</script>
   

</body>

</html>
